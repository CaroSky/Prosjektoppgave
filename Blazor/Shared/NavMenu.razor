@using Blazor.Data
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>


<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="blogs">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Blogs
            </NavLink>
        </div>
        <br/>
        <div class="notification-icon px-4" @onclick="ShowNotifications" >
            @if (NotificationService.notificationCount > 0)
            {
                <span class="icon">🔔</span>
                <span class="badge" >@notificationCount</span>
            }
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int notificationCount;


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        notificationCount = await NotificationService.GetNotificationsCount();
        NotificationService.OnNotificationCountChanged += UpdateNotificationCount;
        Console.WriteLine("Menu updated.");
        Console.WriteLine($"Notification count in menu: {notificationCount}.");
    }

    private void UpdateNotificationCount(int count)
    {
        notificationCount = count;
        StateHasChanged();
    }

    private void ShowNotifications()
    {
        NavigationManager.NavigateTo($"/notifications/");
    }


}
