@using SharedModels.Entities
@using SharedModels.ViewModels
@using Blazor.Data;

@page "/search/{tag}"

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject SearchService SearchService

@if (posts == null)
{
    <p>No post found...</p>
}

else
{
    @foreach (var post in posts)
    {

        <div class="card post-preview mb-4">
            <div class="card-body">
                <h4 class="card-title">@post.Title</h4>
                <p class="card-text">@post.Content</p>
                <p class="card-text"><small class="text-muted">@post.OwnerUsername posted on @post.Created.ToString("yyyy-MM-dd")</small></p>

                <div class="form-check">
                    <input class="form-check-input" type="checkbox" disabled="disabled" @bind="post.IsCommentAllowed" />
                    <label class="form-check-label" for="commentCheckbox">Allow Comments</label>
                </div>

            </div>
        </div>
    }



}


@code {

    [Parameter]
    public string tag { get; set; }
    private List<SharedModels.Entities.Post> posts;
    private SharedModels.Entities.Post _post = new SharedModels.Entities.Post();
    private PostCreateViewModel _viewPost = new PostCreateViewModel();
    private PostEditViewModel _viewEditPost = new SharedModels.ViewModels.PostEditViewModel();
    private string _titleDialog;
    private PostDialogBox _dialog;

    //private IEnumerable<Post> posts;
    //private IEnumerable<SharedModels.Entities.Post> posts;

    protected override async Task OnInitializedAsync()
    {
        var postEnumerable = await SearchService.SearchPostAsync(tag);
        if (postEnumerable.Count() == 0)
        {
            posts = null;

        }
        else
        {
            posts = postEnumerable.ToList();
        }
        

    }

 

}


